version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: nickz
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  productapi:
    build:
      context: ./productApi
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - backend
    depends_on:
      - postgres
      - kafka

    restart: unless-stopped

  consumerservice:
    build:
      context: ./consumerService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - postgres
      - kafka
      - productapi
    restart: unless-stopped

  metricsconsumer:
    build:
      context: ./metricsConsumer
      dockerfile: Dockerfile
    ports:
      - "8989:8989"
    networks:
      - backend
    depends_on:
      - postgres
      - kafka
      - productapi
    restart: unless-stopped

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - backend
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:SASL_PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    networks:
      - backend
    depends_on:
      - zookeeper
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
